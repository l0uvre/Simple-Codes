-- MySQL Script generated by MySQL Workbench
-- Mon Oct  2 18:35:42 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table Countries
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Countries (
  CountryId INT NOT NULL, -- 'identifier for countries'
  CountryName VARCHAR(45) NOT NULL, -- 'Name for one country, certainly unique.'
  CONSTRAINT idcountries_UNIQUE UNIQUE (CountryId ASC),
  CONSTRAINT CountryName_UNIQUE UNIQUE (CountryName ASC),
  PRIMARY KEY (CountryId)
  CONSTRAINT check_ctID CHECK (CountryId > 0))
-- 'The identity we make and name of countries all over the world.'
;


-- -----------------------------------------------------
-- Table TLAS
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS TLAS (
  TLASid INT NOT NULL, -- 'The identifier of one country\'s top level of administrative subdivision'
  TLASname VARCHAR(45) NOT NULL, -- 'The name of one country\'s top level of administrative subdivision, state, province, autonomous territory,  special region for a \nfederal capital, etc.'
  PRIMARY KEY (TLASid),
  CONSTRAINT TLASname_UNIQUE UNIQUE (TLASname ASC),
  CONSTRAINT TLASid_UNIQUE UNIQUE (TLASid ASC),
  CONSTRAINT check_TLASid CHECK (TLASid > 0))
  
-- 'The name and identity of  Top Level of Administrative Subdivision all over the world.'
;


-- -----------------------------------------------------
-- Table Citys
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Citys (
  CityId INT NOT NULL, -- 'indentifier for cities all over the world'
  CityName VARCHAR(45) NOT NULL, -- 'Name for the city.'
  CONSTRAINT CityId_UNIQUE UNIQUE (CityId ASC),
  PRIMARY KEY (CityId)
  CONSTRAINT check_CityId CHECK (CityId > 0))
  
-- 'The identity and name of citys all over the world.'
;


-- -----------------------------------------------------
-- Table TLASforCountry
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS TLASforCountry (
  CountryId INT NOT NULL,
  TLASid INT NOT NULL,
  PRIMARY KEY (CountryId, TLASid),
  CONSTRAINT TLASId
    FOREIGN KEY (TLASid)
    REFERENCES TLAS (TLASid)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT CountryId
    FOREIGN KEY (CountryId)
    REFERENCES Countries (CountryId)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
-- 'The table combines of coutries and its top level of administrative subdivision.'
;


-- -----------------------------------------------------
-- Table Capitals
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Capitals (
  CapitalTypeId INT NOT NULL, -- '1 stands for capitals for a country, while \n2 stands for capitals for administrative divisions.'
  TLASCountryId INT NOT NULL, -- 'the identifier of a country or its administrative subdivisions'
  CityId INT NOT NULL, -- 'CityId for capitals of administrative subdivisions or countries.'
  PRIMARY KEY (TLASCountryId, CityId),
  CONSTRAINT CityId
    FOREIGN KEY (CityId)
    REFERENCES Citys (CityId)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT TLASid
    FOREIGN KEY (TLASCountryId)
    REFERENCES TLASforCountry (TLASid)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT CountryId
    FOREIGN KEY (TLASCountryId)
    REFERENCES TLASforCountry (CountryId)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
-- 'The table combines the top level of administrative subdivision and its capital(s) or countries and its capital(s).'
;


-- -----------------------------------------------------
-- Table RegionInfo
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS RegionInfo (
  RegionType INT NOT NULL, -- 'Value:\n         0 for a country \n         1 for the top level of administrative subdivisions of a contry'
  CountryIdTLASid INT NOT NULL, -- 'identifier for a country or its top level of  administrative subdivision.'
  Population REAL NOT NULL,
  Surface REAL NOT NULL, -- 'the region\'s surface area.'
  LargestCityId INT NOT NULL,
  PRIMARY KEY (CountryIdTLASid, LargestCityId),
  CONSTRAINT CountryIdTLASid
    FOREIGN KEY (CountryIdTLASid)
    REFERENCES Capitals (TLASCountryId)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT LargestCityId
    FOREIGN KEY (LargestCityId)
    REFERENCES Citys (CityId)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
-- 'Much related information (surface, capitials, timezone, population and surface area ) about one country or its top level of administrative subdivision.'
;



-- -----------------------------------------------------
-- Table TimeZone
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS TimeZone (
  RegionType INT NOT NULL, -- 'Value:\n         0 for a country \n         1 for the top level of administrative subdivisions of a contry'
  CountryIdTLASid INT NOT NULL,
  UTCoffset VARCHAR(45) NOT NULL, -- 'Time zone marked with UTC offsets such as UTC+09:00 and UTC+09:00'
  CONSTRAINT CountryIdTLASid
    FOREIGN KEY (CountryIdTLASid)
    REFERENCES Capitals (TLASCountryId)
    ON DELETE NO ACTION)
-- 'Give one id of a top level of administrative subdivision or a country to look up its time zone.'
;


